document.addEventListener("DOMContentLoaded", async () => {
  console.log("‚úÖ DOM –∑–∞–≥—Ä—É–∂–µ–Ω");

  const panel = document.getElementById("breakfast-section");

  try {
    const response = await fetch("data/breakfast.json?nocache=" + Date.now());
    if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ HTTP " + response.status);

    const data = await response.json();
    console.log("üì¶ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:", data);

    renderBreakfast(panel, data);
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ JSON:", err);
    panel.innerHTML = `<p style="color:red;">–û—à–∏–±–∫–∞: ${err.message}</p>`;
  }
});

function renderBreakfast(panel, data) {
  panel.innerHTML = "";

  const table = document.createElement("table");
  table.classList.add("dish-table");

  // –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
  const thead = document.createElement("thead");
  thead.innerHTML = `
    <tr>
      <th>‚Ññ</th>
      <th>–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞</th>
      <th>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</th>
      <th>–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è</th>
      <th>–§–æ—Ç–æ</th>
    </tr>`;
  table.appendChild(thead);

  const tbody = document.createElement("tbody");

  data.forEach((dish) => {
    dish.ingredients.forEach((ing, i) => {
      const tr = document.createElement("tr");

      // –Ω–æ–º–µ—Ä
      const tdNum = document.createElement("td");
      tdNum.textContent = String(i + 1);
      tr.appendChild(tdNum);

      // –ø—Ä–æ–¥—É–∫—Ç
      const tdIng = document.createElement("td");
      tdIng.textContent = ing.ru || "";
      tr.appendChild(tdIng);

      // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
      const tdAmount = document.createElement("td");
      tdAmount.textContent = ing.amount || "";
      tr.appendChild(tdAmount);

      // —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è –∏ —Ñ–æ—Ç–æ —Ç–æ–ª—å–∫–æ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ
      if (i === 0) {
        const tdProcess = document.createElement("td");
        tdProcess.textContent = dish.process?.ru || "";
        tdProcess.rowSpan = dish.ingredients.length;
        tr.appendChild(tdProcess);

        const tdPhoto = document.createElement("td");
        if (dish.photo) {
          const img = document.createElement("img");
          img.src = dish.photo;
          img.alt = "–§–æ—Ç–æ";
          img.style.maxWidth = "120px";
          img.style.display = "block";
          tdPhoto.appendChild(img);
        } else {
          tdPhoto.textContent = "-";
        }
        tdPhoto.rowSpan = dish.ingredients.length;
        tr.appendChild(tdPhoto);
      }

      tbody.appendChild(tr);
    });
  });

  table.appendChild(tbody);
  panel.appendChild(table);
}