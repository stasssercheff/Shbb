document.addEventListener("DOMContentLoaded", () => {
  const scheduleBody = document.getElementById("scheduleBody");
  const datesRow = document.getElementById("datesRow");

  // –º–∞—Å—Å–∏–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
  const staff = ["–®–µ—Ñ","–°—Ç–∞—Å","–ö—É—Ö–Ω—è","–ú–∞–∫—Å–∏–º","–ú–∏–≥–µ–ª—å","–®–∞–≤–∫–∞—Ç","–ö–æ–Ω–¥–∏—Ç–µ—Ä—ã","–¢–∏–º–æ—Ñ–µ–π","–ò—Ä–∏–Ω–∞"];

  // –ø—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: 1 - –µ—Å—Ç—å —Å–º–µ–Ω–∞, 0 - –Ω–µ—Ç
  // –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É, 10 –¥–Ω–µ–π
  const data = [
    [1,1,1,1,1,0,0,1,1,0], // –®–µ—Ñ
    [1,1,1,1,1,1,0,1,1,1], // –°—Ç–∞—Å
    [0,0,0,0,0,0,0,0,0,0], // –ö—É—Ö–Ω—è
    [0,1,1,1,1,0,0,1,1,1], // –ú–∞–∫—Å–∏–º
    [1,0,0,1,1,1,1,0,0,1], // –ú–∏–≥–µ–ª—å
    [0,1,1,0,0,1,1,1,1,0], // –®–∞–≤–∫–∞—Ç
    [0,0,0,0,0,0,0,0,0,0], // –ö–æ–Ω–¥–∏—Ç–µ—Ä—ã
    [0,0,0,0,0,0,1,1,1,1], // –¢–∏–º–æ—Ñ–µ–π
    [1,1,1,1,0,0,1,1,1,1], // –ò—Ä–∏–Ω–∞
  ];

  // –¥–∞—Ç—ã ‚Äî 10 –¥–Ω–µ–π –Ω–∞—á–∏–Ω–∞—è —Å —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ
  const today = new Date();
  for (let i = 0; i < 10; i++) {
    const d = new Date();
    d.setDate(today.getDate() + i);
    const iso = d.toISOString().split("T")[0];
    const day = d.toLocaleDateString("ru-RU",{ day:"2-digit", month:"2-digit" });
    const weekday = d.toLocaleDateString("ru-RU",{ weekday:"short" });
    const th = document.createElement("th");
    th.dataset.date = iso;
    th.innerHTML = `${day}<br>${weekday}`;
    datesRow.appendChild(th);
  }

  // —Å—Ç—Ä–æ–∫–∏ —Å–º–µ–Ω
  staff.forEach((person, idx) => {
    const tr = document.createElement("tr");
    data[idx].forEach((shift, j) => {
      const td = document.createElement("td");
      td.textContent = shift;
      td.classList.add("shift-" + shift);
      tr.appendChild(td);
    });
    scheduleBody.appendChild(tr);
  });

  // –ø–æ–¥—Å–≤–µ—Ç–∫–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è (—Ü–µ–ª—ã–π —Å—Ç–æ–ª–±–µ—Ü)
  const headers = document.querySelectorAll("#datesRow th");
  headers.forEach((th, colIdx) => {
    if (th.dataset.date === today.toISOString().split("T")[0]) {
      th.classList.add("today");
      const rows = scheduleBody.querySelectorAll("tr");
      rows.forEach(row => {
        if (row.cells[colIdx]) {
          row.cells[colIdx].classList.add("today");
        }
      });
    }
  });
  
  document.addEventListener("DOMContentLoaded", () => {
  // –ó–∞–≥—Ä—É–∂–∞–µ–º header.html
  fetch("header.html")
    .then(res => res.text())
    .then(html => {
      document.getElementById("headerContainer").innerHTML = html;

      // –ù–∞–≤–∏–≥–∞—Ü–∏—è
      document.getElementById("btnBack").addEventListener("click", () => {
        window.history.back();
      });
      document.getElementById("btnHome").addEventListener("click", () => {
        window.location.href = "index.html"; // –∫–æ—Ä–Ω–µ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
      });

      // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞
      const langSwitcher = document.getElementById("langSwitcher");
      langSwitcher.addEventListener("change", (e) => {
        const lang = e.target.value;
        setLanguage(lang);
        localStorage.setItem("lang", lang);
      });

      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —è–∑—ã–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
      const savedLang = localStorage.getItem("lang") || "ru";
      langSwitcher.value = savedLang;
      setLanguage(savedLang);
    });

  // ==== —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ ====
  function setLanguage(lang) {
    const translations = {
      ru: {
        "btnBack": "‚Üê –ù–∞–∑–∞–¥",
        "btnHome": "üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é",
        "pageTitle": "–ì—Ä–∞—Ñ–∏–∫ —Å–º–µ–Ω"
      },
      en: {
        "btnBack": "‚Üê Back",
        "btnHome": "üè† Home",
        "pageTitle": "Work Schedule"
      }
    };

    document.title = translations[lang].pageTitle;

    const btnBack = document.getElementById("btnBack");
    const btnHome = document.getElementById("btnHome");
    if (btnBack) btnBack.textContent = translations[lang].btnBack;
    if (btnHome) btnHome.textContent = translations[lang].btnHome;
  }
});